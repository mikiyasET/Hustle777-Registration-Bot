<div class="failure-message">
    <svg viewBox="0 0 76 76" class="failure-message__icon icon-checkmark">
        <circle cx="38" cy="38" r="36"/>
        <path d="M 10,10 l 90,90 M 70,10 l -200,190" fill="none" stroke="#FFFFFF" stroke-width="5" stroke-linejoin="round"/>
    </svg>
    <h1 class="failure-message__title">Failure</h1>
    <div class="failure-message__content">
        <p><a href="https://t.me/ourtest1bot">Go back</a> to the bot and retry</p>
    </div>
</div>

<style>
    .failure-message {
        text-align: center;
        max-width: 500px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .failure-message__icon {
        max-width: 75px;
    }

    .failure-message__title {
        color: #c43d4a;
        transform: translateY(25px);
        opacity: 0;
        transition: all 200ms ease;
    }
    .active .failure-message__title {
        transform: translateY(0);
        opacity: 1;
    }

    .failure-message__content {
        color: #B8BABB;
        transform: translateY(25px);
        opacity: 0;
        transition: all 200ms ease;
        transition-delay: 50ms;
    }
    .active .failure-message__content {
        transform: translateY(0);
        opacity: 1;
    }

    .icon-checkmark circle {
        fill: #c43d4a;
        transform-origin: 50% 50%;
        transform: scale(0);
        transition: transform 200ms cubic-bezier(0.22, 0.96, 0.38, 0.98);
    }
    .icon-checkmark path {
        transition: stroke-dashoffset 350ms ease;
        transition-delay: 100ms;
    }
    .active .icon-checkmark circle {
        transform: scale(1);
    }
</style>
<script>
    function PathLoader(el) {
        this.el = el;
        this.strokeLength = el.getTotalLength();

        // set dash offset to 0
        this.el.style.strokeDasharray =
            this.el.style.strokeDashoffset = this.strokeLength;
    }

    PathLoader.prototype._draw = function (val) {
        this.el.style.strokeDashoffset = this.strokeLength * (1 - val);
    }

    PathLoader.prototype.setProgress = function (val, cb) {
        this._draw(val);
        if(cb && typeof cb === 'function') cb();
    }

    PathLoader.prototype.setProgressFn = function (fn) {
        if(typeof fn === 'function') fn(this);
    }

    var body = document.body,
        svg = document.querySelector('svg path');

    if(svg !== null) {
        svg = new PathLoader(svg);

        setTimeout(function () {
            document.body.classList.add('active');
            svg.setProgress(1);
        }, 200);
    }
</script>